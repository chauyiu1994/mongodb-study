// the age value is actually stored as a double by default
// (may be not precise i.e. value is something like 29.000000002)
// there is another type called precise-double which gurantee precision up to 34 decimals place
db.persons.insertOne({ name: "Max", age: 29 });

// implicitly use int32 (save some spaces)
// should use a string in the arg
db.persons.insertOne({ age: NumberInt("29") });
// should also be updated by a NumberInt, otherwise the result will be casted to the input field type
db.persons.updateOne({}, { $inc: { age: NumberInt("10") } });

// use NumberLong for int64
db.companies.insertOne({ valuation: NumberLong("5000000000") });
db.companies.updateOne({}, { $inc: { valuation: NumberLong("1") } });

// example that double is not precise (in most case this is ok but have to aware)
db.science.insertOne({ a: 0.3, b: 0.1 });
db.science.aggregate([{ $project: { result: { $subtract: ["$a", "$b"] } } }]);

// decimal128 (NumberDecimal) (more precise)
db.science.deleteMany({});
db.science.insertOne({ a: NumberDecimal("0.3"), b: NumberDecimal("0.1") });
db.science.find();
db.science.aggregate([{ $project: { result: { $subtract: ["$a", "$b"] } } }]);
